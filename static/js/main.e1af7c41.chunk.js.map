{"version":3,"sources":["components/ProjectListContext.jsx","components/InformationContext.jsx","components/zoom-slider.jsx","components/left-main.jsx","components/right-main.jsx","App.js","reportWebVitals.js","index.js"],"names":["ProjectListContext","createContext","ProjectProvider","props","useState","title","date","brief","description","image","details","video","isOver","projects","setProjects","Provider","value","children","InformationContext","InformationProvider","information","setInformation","React","Component","changeBackground","e","target","style","background","color","changeBackground2","Wrapper","Styled","div","Sidebar","Lead","h1","Brief","p","LeftMain","useContext","type","hyperLink","links","showBrief","setShowBrief","showList","setShowList","showContact","setShowContact","Container","onMouseEnter","onMouseLeave","onMouseOver","map","link","href","currentProj","i","onClick","prevInformation","alt","displayProject","RightMain","DisplayData","currentInfo","src","process","className","PlayerWrapper","width","height","controls","url","Credit","a","App","fluid","Row","Col","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1af7c41.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\nexport const ProjectListContext = createContext();\n\n// whenever we want to use this state below we will export it through the context above\nexport const ProjectProvider = (props) => {\n  const [projects, setProjects] = useState([\n    {\n      title: \"What Is News?\",\n      date: \"[2020]\",\n      brief:\n        \" Extracting the most shared articles on various social platforms to see how they compare at face value. \",\n      description:\n      \"A poetic approach to web-design by visualizing data in a creative coding enviroment using p5 library. As well to combine the React declarative programming approach and imperative one for direct DOM manipulation. \",\n      image: \"\",\n      details:\n        \"https://michaelrodriguez23.github.io/WhatIsNews/\",\n      video: \"https://www.youtube.com/watch?v=PqZC-vKCedg\",\n      isOver: false,\n    },\n    {\n      title: \"Soft Wave\",\n      date: \"[2019]\",\n      brief:\n        \"Set inside a flower shop, this site specific piece was inspired by the unsustainable International flower market and newly evolving environmentally sustainable florist practices.\",\n      description:\n        \"In this interactive performance, two dancers weave in and out of unison, occasionally making contact with the .audience\",\n      image: \"/assets/images/SoftWave.JPG\",\n      details:\n        \"Choreographed and performed by Breckyn Davila Drescher in collaboration with Bria Bacon, and Senem Gunes Costumes by Senem Gunes Music 'Soft Wave For Automatic Music Box' Hiroshi Yoshimura This piece was one of five as part of a performance at Fleurotica Flower Shop conceived and curated and by Breckyn Davila Drescher Still by Charlotte Prager\",\n      video: \"video link\",\n      isOver: false,\n    },\n    {\n      title: \"I and P\",\n      date: \"  [2018]\",\n      brief:\n        \"The Croft: Islands and Peninsulas is a multi-part residency taking place over two consecutive summers.\",\n      description:\n        \"Collecting information based on both environment and individual personalities, we piece together how the land has been affected by Climate Change, and how we incorporate sustainable practices into our everyday connection with this place and to one another one.\",\n      image: \"/assets/images/I_AND_P.JPG\",\n      details:\n        \"Choreographed and Performed by Breckyn Davila Drescher, Hannah Garner, Chelsea Hecht, and Ben Cheney Filmed and Photographed by Jordan KunzelEdited by all the collaborators\",\n      video: \"video link\",\n      isOver: false,\n    },\n\n  ]);\n  return (\n    <ProjectListContext.Provider value={[projects, setProjects]}>\n      {props.children}\n    </ProjectListContext.Provider>\n  );\n};\n","import React, { useState, createContext } from \"react\";\n\nexport const InformationContext = createContext();\n\n/*  whenever we want to use this state below we will export it through the context above */\n\nexport const InformationProvider = (props) => {\n  const [information, setInformation] = useState([\n    {\n      title: \"\",\n      date: \"\",\n      brief: \"\",\n      description: \"\",\n      details: \"\",\n      image: \"\",\n      video: \"\",\n    },\n  ]);\n\n  return (\n    /* providing the state above to all the components */\n\n    <InformationContext.Provider value={[information, setInformation]}>\n      {props.children} {/* this is rendering all the child components */}\n    </InformationContext.Provider>\n  );\n};\n","import React, { Component } from \"react\";\nimport p5 from \"p5\";\nclass Sketch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  Sketch = (p) => {\n    let canvas;\n    \n    let cursor; \n    let angle = 0;\n    let img;\n\n    function preLoad() {}\n    function windowResized() {\n      p.resizeCanvas(p.windowWidth / 2.59, p.windowHeight / 1.58, p.WEBGL);\n    }\n    p.setup = () => {\n      canvas = p.createCanvas(\n        p.windowWidth / 2.59,\n        p.windowHeight / 1.58\n      );\n      img = p.loadImage(\n        \"https://michaelrodriguez23.github.io/brecklyn_portfolio/assets/FastService.jpeg\"\n      );\n      cursor = p.loadImage(\n        \"https://michaelrodriguez23.github.io/brecklyn_portfolio/assets/100.png\"\n      );\n\n\n      \n    };\n    function cursorDraw(){\n      p.noCursor();\n      p.image(cursor,p.mouseX,p.mouseY,100,100);\n    }\n\n    p.draw = () => {\n      windowResized();\n      p.background(0);\n      cursorDraw();\n   \n     };\n    \n  };\n\n  componentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n  }\n  render() {\n    return (\n      <div id=\"canvasWrapper\" ref={this.myRef}>\n        <h1 className=\"App-title\"> {this.props.title} </h1>\n      </div>\n    );\n  }\n}\nexport default Sketch;\n","import React, { useState, useContext, Linking } from \"react\";\nimport Styled from \"styled-components\";\nimport { ProjectListContext } from \"./ProjectListContext\";\nimport { InformationContext } from \"./InformationContext\";\nimport Sketch from \"./zoom-slider\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../index.css\";\n\nfunction changeBackground(e) {\n  e.target.style.background = \"#FAFAFA\";\n  e.target.style.color = \"black\";\n}\n\nfunction changeBackground2(e) {\n  e.target.style.background = \"black\";\n  e.target.style.color = \"white\";\n}\n\nconst LeftMain = () => {\n  const [projects, setProjects] = useContext(ProjectListContext);\n  const [information, setInformation] = useContext(InformationContext);\n  const [links, setLinks] = useState([\n    {\n      type: \"email\",\n      hyperLink: \"mailto:vejigante@protonmail.com\",\n      isOver: false,\n    },\n    {\n      type: \"github\",\n      hyperLink: \"https://github.com/michaelrodriguez23\",\n      isOver: false,\n    },\n    {\n      type: \"blog\",\n      hyperLink: \"https://www.substack.com/\",\n      isOver: false,\n    },\n    {\n      type: \"are.na\",\n      hyperLink: \"https://www.are.na/miguelito/high-tech-low-life-adda3vjovvi\",\n      isOver: false,\n    },\n   \n  ]);\n\n  const [showLink, setShowLink] = React.useState(true);\n  const [showBrief, setShowBrief] = React.useState(true);\n  const [showList, setShowList] = React.useState(false);\n  const [showContact, setShowContact] = React.useState(false);\n  const [showProject, setShowProject] = React.useState(false);\n\n  function highLight(e) {\n    if (showLink) {\n      e.target.style.background = \"#FAFAFA\";\n      e.target.style.color = \"black\";\n    } else {\n      e.target.style.background = \"black\";\n      e.target.style.color = \"white\";\n    }\n  }\n  function openLink(e, link, i) {\n    window.location.assign(link.hyperLink);\n  }\n  /* Passing in the currentProj of the list, and its index to set the State for Information */\n  function displayProject(e, currentProj, i) {\n    setInformation((prevInformation) => [\n      {\n        title: currentProj.title,\n        date: currentProj.date,\n        brief: currentProj.brief,\n        description: currentProj.description,\n        image: currentProj.image,\n        details: currentProj.details,\n        alt: currentProj.alt,\n        video: currentProj.video,\n      },\n    ]);\n  }\n\n  return (\n    <Container>\n      <Wrapper>\n        <Sidebar>\n          <Lead\n            onMouseEnter={() => setShowBrief(true)}\n            onMouseLeave={() => setShowBrief(true)}\n            onMouseOver={changeBackground2}\n          >\n            <h1>Michael Elijah</h1>\n            <Brief>{showBrief ? <p>{brief}</p> : null}</Brief>\n          </Lead>\n\n          <Lead\n            onMouseEnter={() => setShowContact(true)}\n            onMouseLeave={() => setShowContact(false)}\n          >\n            <p>network 📡</p>\n            {showContact ? (\n              <ul>\n                {links.map((link) => (\n                  <a href={link.hyperLink}>\n                    <li\n                      onMouseOver={changeBackground}\n                      onMouseLeave={changeBackground2}\n                    >\n                      {link.type}\n                    </li>\n                  </a>\n                ))}\n              </ul>\n            ) : null}\n          </Lead>\n\n          <Lead\n            onMouseEnter={() => setShowList(true)}\n            onMouseLeave={() => setShowList(false)}\n          >\n            <p>work 🔨</p>\n            {showList ? (\n              <ul>\n                {projects.map((currentProj, i) => (\n                  <li\n                    onMouseOver={changeBackground}\n                    onMouseLeave={changeBackground2}\n                    onClick={(e) => displayProject(e, currentProj, i)}\n                  >\n                    {currentProj.title} {currentProj.date}\n                  </li>\n                ))}\n              </ul>\n            ) : null}\n          </Lead>\n\n          {/* <Sketch></Sketch> */}\n\n          <Lead></Lead>\n        </Sidebar>\n      </Wrapper>\n    </Container>\n  );\n};\n// Variables\nconst brief =\n  \"\" ; \nconst Wrapper = Styled.div`\nbackground-color:black;\nalign-items:center;\nheight:101vh;\n\nmargin:0;\n`;\nconst Sidebar = Styled.div`\nheight:100vh;\n\n`;\nconst ZoomSlider = Styled.div`\nbox-sizing: border-box;\nmargin:0;\n`;\n\nconst Lead = Styled.h1`\nmargin:0;\nfont-size:1.5em;\npadding-top:2%;\nbackground-color:black;\ntext-align: center;\ncolor:white;\n\n`;\nconst Work = Styled.div`\nmargin:0;\nfont-size:1em;\nbackground-color:black;\ntext-align: center;\ncolor:white;\n`;\nconst Brief = Styled.p`\nfont-size:3em;\npadding: .5em;\ntext-align:center;\ncolor:white;\n\n`;\n\n\nexport default LeftMain;\n","import React, { useContext } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { ProjectListContext } from \"./ProjectListContext\";\nimport { InformationContext } from \"./InformationContext\";\nimport Sketch from \"./zoom-slider\";\nimport Styled from \"styled-components\";\nconst RightMain = () => {\n  const [projects, setProjects] = useContext(ProjectListContext);\n  const [information, setInformation] = useContext(InformationContext);\n  return (\n    <>\n      <DisplayData>\n        {information.map((currentInfo, i) => (\n          <>\n            <h1>{currentInfo.title}</h1>\n            <h4>{currentInfo.date}</h4>\n           \n            <Brief>\n              <p>{currentInfo.brief}</p>\n            </Brief>\n           \n             {/*img src has to use env to display image urls outside of src folder *\n             if project hasn't been selected then the currentInfo.image should be empty. \n             Therefore the ternary should populate an empty screen.*/}\n            {currentInfo.image ? (\n             <img src={process.env.PUBLIC_URL + \"scan.png\"} /> \n          \n              ) : (\n              <p></p>\n              \n            )}\n            <div className='player-wrapper'>\n              <PlayerWrapper>\n                <ReactPlayer \n               \n                  className=\"react-player\"\n                  width=\"100%\"\n                  height=\"100%\"\n                  controls = {false}            \n                  url={currentInfo.video}\n                 \n                /> \n               \n              </PlayerWrapper> \n              </div>\n              <Credit>\n     \n     <a href={currentInfo.details}>{currentInfo.details} </a>\n   </Credit>\n            <Lead>\n        \n              <p>{currentInfo.description}</p>\n            </Lead>\n        \n          </>\n        ))}\n      </DisplayData>\n    </>\n  );\n};\n\nexport default RightMain;\n\nconst DisplayData = Styled.div`\ntext-align: center;\npadding:1em;\nbackground: black;\nfont-size:1em;\nheight:101vh;\nmargin:0;\ncolor:white;\n`;\nconst PlayerWrapper = Styled.div`\nposition: relative; \npadding-top: 56.25%;\n\n`;\n\nconst Lead = Styled.h1`\ntext-align: center;\nmargin:0;\nfont-size:2em;\npadding-top:1em;\nbackground-color:black;\ncolor:white;\n`;\nconst Brief = Styled.p`\n\npadding-top:.5em;\ntext-align: center;\nmargin:0;\nfont-size:1.3em !important;\nbackground-color:black;\ncolor:white;\n`;\nconst Credit = Styled.a`\ntext-align: right;\n\nfont-size:1em;\npadding:5em;\nbackground-color:black;\ncolor:white;\n`;\n","import LeftMain from \"./components/left-main\";\nimport RightMain from \"./components/right-main\";\n// import ResizeClass from \"./components/resizeClass\";\nimport { ProjectProvider } from \"./components/ProjectListContext\";\nimport { InformationProvider } from \"./components/InformationContext\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst App = () => {\n  return (\n    <ProjectProvider>\n      <InformationProvider>\n        <Container fluid>\n          {/* <ResizeClass> */}\n            <Row>\n              <Col>\n                <LeftMain />\n              </Col>\n              <Col>\n                <RightMain />\n              </Col>\n            </Row>\n          {/* </ResizeClass> */}\n        </Container>\n      </InformationProvider>\n    </ProjectProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}